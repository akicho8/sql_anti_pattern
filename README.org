* SQLアンチパターン覚え書き

   | 名前                   | 何がダメか                           | 解決方法                   |
   |------------------------+--------------------------------------+----------------------------|
   | 信号無視               | 1つのカラムにIDを複数格納            | 中間テーブルを持つ         |
   | 複数列属性             | 面倒なのでカラムを連番で増やしていく | 1:多の適切なリレーション   |
   | 闇雲インデックス       | すべてにインデックスを張る           | 絞る                       |
   | 幻のファイル           | カラムに画像ファイルのパスを格納     | blob                       |
   | 読み取り可能パスワード | パスワードをそのまま格納             | ハッシュ化                 |
   | 31のフレーバー         | 限定する値を列定義(enum)で指定       | 別テーブルで管理           |
   | ランダムセレクション   | order rand()                         | limit 1 offset rand(count) |
   | 丸め誤差               | float                                | decimal                    |
   | SQLインジェクション    | where("id = #{params[:id]}")         | where(:id => params[:id])  |

** [[jaywalking.rb][信号無視]]

# #+INCLUDE: "jaywalking.rb" ruby
# #+INCLUDE: "https://raw.githubusercontent.com/akicho8/sql_anti_pattern/master/jaywalking.rb" ruby
# #+INCLUDE: "jaywalking.rb" example

#+BEGIN_SRC ruby
create_table :users do |t|
  t.string :friends_ids
end

user = User.create!
user.friends_ids = 2.times.collect { User.create!.id }.join(",")
user.friends_ids # => "2,3"
#+END_SRC

** [[multi_column_attribute.rb][複数列属性]]

#+BEGIN_SRC ruby
create_table :articles do |t|
  t.string :comment1
  t.string :comment2
  t.string :comment3
end
#+END_SRC

** [[index_shotgun.rb][闇雲インデックス]]

#+BEGIN_SRC ruby
create_table :users do |t|
  t.string :name, :index => true
  t.timestamps    :index => true

  t.index [:name, :created_at, :updated_at]
end
#+END_SRC

** [[phantom_files.rb][幻のファイル]]

#+BEGIN_SRC ruby
user = User.create!(:file_path => "path/to/file.png")
Pathname(user.file_path).exist? # => false
#+END_SRC

** [[readable_passwords.rb][読み取り可能パスワード]]

#+BEGIN_SRC ruby
user = User.create!(:password => "foo")
user.password_before_type_cast  # => "foo"
#+END_SRC

** [[thirty_one_flavors.rb][31のフレーバー]]

#+BEGIN_SRC ruby
create_table :users do |t|
  t.column :foo, "ENUM('a', 'b')"
end

User.create!(:foo => "a") # => #<User id: 1, foo: "a">
User.create!(:foo => "b") # => #<User id: 2, foo: "b">
#+END_SRC

** [[random_selection.rb][ランダムセレクション]]

#+BEGIN_SRC ruby
# NG
User.order("random()").take

# GOOD
User.offset(rand(User.count)).take
#+END_SRC

** [[rounding_errors.rb][丸め誤差]]

#+BEGIN_SRC ruby
create_table :users do |t|
  t.column :c1, :float
  t.column :c2, :double
  t.column :c3, "DECIMAL(65, 30)"
end

v = 5.5555555555555555555555555555555555555
user = User.create!(:c1 => v, :c2 => v, :c3 => v).reload
user.c1.to_d # => 0.555556e1
user.c2.to_d # => 0.555555555555556e1
user.c3.to_d # => 0.5555555555555555e1
#+END_SRC

** [[sql_injection.rb][SQLインジェクション]]

#+BEGIN_SRC ruby
id = "0 or name = 'admin'"
User.where("id = #{id}").take   # => #<User id: 2, name: "admin">
#+END_SRC
